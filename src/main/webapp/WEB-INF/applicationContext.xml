<?xml version="1.0" encoding="UTF-8"?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx" 
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:annotation-config/>
	<mvc:annotation-driven conversion-service="conversionService" />
	<mvc:default-servlet-handler />

	<!-- Escaneia as classes analizando suas respectivas anotacoes -->
	<context:component-scan base-package="br.com.iftube" />

	<!-- To prevent browser's back button on displayng  secured resource after logout -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0"/> 
	</bean>
	
	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="br.com.iftube.service.impl.CursoServiceImpl" />
				<bean class="br.com.iftube.service.impl.DisciplinaServiceImpl" />
			<!--<bean class="br.com.iftube.service.impl.PalavraChaveServiceImpl" />-->
				<bean class="br.com.iftube.service.impl.MatriculaServiceImpl" />
				<bean class="br.com.iftube.service.impl.UsuarioServiceImpl" />
			</list>
		</property>
	</bean>


	<!-- Configurando o Data Source com os dados do banco -->
	<bean id="mysqlDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/iftube" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<!-- Criando um EntityManager -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- Referência as propriedades do banco -->
		<property name="dataSource" ref="mysqlDataSource" />

		<!-- Qual o Adapter JPA? Neste caso é o Hibernate -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
			</bean>
		</property>
	</bean>

	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Construção do Objeto de Gestão de transações Spring JPA -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<!-- Vinculando com o objeto EntityManagerFactory construido anteriormente -->
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Ao anotar @Transaction irá chamar os gerenciadores de transações -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	
	
	<!--<bean id="springSecurityFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy" />-->
	
	<!-- 
	<mvc:interceptors>
		<bean class="br.com.iftube.util.AutorizadorInterceptor" />
	</mvc:interceptors>
	 -->
	
	<!-- View scope - Integração do Spring com JSF <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer"> 
		<property name="scopes"> <map> <entry key="view"> <bean class="br.com.iftube.util.ViewScope" 
		/> </entry> </map> </property> </bean> -->
</beans>